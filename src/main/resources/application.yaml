#spring.application.name=CloudGateway

server:
  port: 9090

spring:
  application:
    name: CloudGateway
  # Config server: it's another service which give common config.
  config:
    import: configserver:http://localhost:9296

  # Cloud coonfiguration for gateway to route the API calls
  cloud:
    gateway:
      routes:
        - id: ORDERSERVICE
          uri: lb://ORDERSERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDERSERVICE
                fallbackUri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCTSERVICE
          uri: lb://PRODUCTSERVICE
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCTSERVICE
                fallbackUri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: PAYMENTSERVICE
          uri: lb://PAYMENTSERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENTSERVICE
                fallbackUri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1

okta:
  oauth2:
    issuer: https://dev-kxjt0wcpmhjbhqvx.us.auth0.com/
    client-id:
    client-secret: 
    scope: openid, profile, email, offline_access, internal


# Zipkin configuration
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans